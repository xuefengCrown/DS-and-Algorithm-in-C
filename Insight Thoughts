
1 处理信息（数与字符）
信息是什么？ 世界是由什么构成？ 真实与幻象
《信息简史》
语言是什么？

世界的最基本构成是什么？
字符——造句
图形—— polygons-and-polyhedra 多边形与多面体
（https://mathigon.org/course/polygons-and-polyhedra#full）
Polygons appear everywhere in nature. They are especially useful if you want to tile a large area, 
because you can fit polygons together without any gaps or overlaps – these patterns are called tessellations.
图片—— 一个个点
Pi—— 随机

存储信息和引用信息
***存储信息：位——>类型
******基本类型  
******数组  
******结构体
几何点

***引用信息：指针
高效
指针有多种途径可使数据结构化？？？
***组织信息，数据
两种线性结构
******数组——固定有序，易于访问而不利于操纵
******list（链表）——逻辑有序，易于操纵而不利于访问

聚合操作，抽象化：函数

涉及泛型——客户 接口 实现

指向数组的指针意义重大，因为它们允许我们把数组作为高级对象加以高效操纵。
尤其是可以把一个指向数组的指针作为参数传递给函数，从而使该函数无需复制整个数组就能
访问数组中的对象。

数组不仅更能反映出大多数计算机中访问内存数据的底层机制。
数组也和表示对象索引列表的数学术语——矢量相对应。？？？？？？？？？？？？



Id allocator
这里第一个例子针对上面第四点展开，其主要的应用在于ID的分配与回收，比如数据库表中的每条记录都需要一个unique id，
当你增增减减若干次之后，然后新建一个表项，你该分配给它哪个id呢？

维持一个id，每增加一行就加1，删行不回收id --- 这样id会无限增加，太浪费了
每次分配都遍历一遍，找到最小的那个还没被用过的id --- 这样太浪费时间了
一个比较合理的做法是维护一个“可用ID”的链表，每次增加就从链表中拿一个，每次删除就把被删的ID链接到链表中

5.2 分治法
递归
分治法 收敛速度


